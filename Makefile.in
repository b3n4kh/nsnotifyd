CFLAGS	= -std=c99 -O2 -Wall -Wextra

RES	= libbind-6.0
RESLIB	= ${RES}/libbind.a
RESTGZ	= ${RES}.tar.gz
RESURL	= http://ftp.isc.org/isc/libbind/cur/${RESTGZ}

LIBDEPS=
LIBFLAGS=
LIBS=

all: Makefile nsnotifyd

Makefile: Makefile.in configure
	@echo make: You need to re-run ./configure
	@false

nsnotifyd: nsnotifyd.c version.h ${LIBDEPS}
	${CC} ${CFLAGS} ${LIBFLAGS} -o nsnotifyd nsnotifyd.c ${LIBS}

version.h::
	@version/set.sh

################################################################

DOCS = nsnotifyd.txt nsnotifyd.pdf index.html

nsnotifyd.txt: nsnotifyd.1
	groff -Tascii -mdoc nsnotifyd.1 | col -bx >nsnotifyd.txt

nsnotifyd.pdf: nsnotifyd.1
	groff -Tps -mdoc nsnotifyd.1 >nsnotifyd.ps
	ps2pdf nsnotifyd.ps >nsnotifyd.pdf

index.html: README.md
	markdown README.md >index.html

################################################################

${RESLIB}: resconfig
	cd ${RES} && make all

resconfig: ${RES}/Makefile

${RES}/Makefile: ${RES}/configure
	cd ${RES} && ./configure

${RES}/configure: ${RESTGZ}
	tar xf ${RESTGZ}
	patch -p0 <${RES}-patch
	touch ${RES}/configure

${RESTGZ}:
	curl -O ${RESURL}

################################################################

clean:
	rm -rf nsnotifyd version/dirty-date ${RES} ${DOCS}

cleaner: clean
	rm -rf Makefile ${RESTGZ}

cleanest: cleaner
	rm -rf version.h

################################################################

release: version.h
	version/release.sh version.h

upload: ${DOCS}
	git push --tags github master
	git push --tags chiark master
	git push --tags origin master
	scp ${DOCS} *.tar.xz *.tar.gz *.zip \
		chiark:public-html/prog/nsnotifyd/

################################################################
