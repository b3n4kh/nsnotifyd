metazones, simpler and faster
-----------------------------

A metazone is a DNS zone which encodes the configuration of a name
server. The term comes from a paper published in 2006 by Paul Vixie
titled "federated domain name service using DNS metazones" which is
available online at http://dotat.at/tmp/metazones.pdf

Vixie's metazones used a relatively complicated mapping from BIND
named.conf syntax to the DNS resource records in a zone. And they
reconfigured BIND using a cron script. Some things have changed with
BIND since metazones were designed, which makes it worth revisiting.


Firstly, more configuration items can now use named lists, not just
ACLs - masters, allow-query, allow-transfer, also-notify - which opens
the possibility of a much simpler metazone encoding. Another option is
to avoid clever encodings and instead put a zone's BIND named.conf
clause in a TXT record in the metazone.

Either way, there is the question of what to do if the new zone
configuration fails.

A simple option is to ignore the error. Later changes involving the
zone will have to be robust in case the metazone's idea of its state
before a change does not match named's idea. Similarly whenever the
metazone is resynchronized.

It might be possible to do better if the metazone machinery knows the
set of named lists defined in named.conf, so when the metazone is
wrong it can log an informative error and avoid disrupting named. But
is a stale zone configuration better or worse than a completely broken
zone?


Secondly, dynamic `rndc addzone` and its related commands mean the
server does not have to re-read its entire configuration to change the
zones it serves.

An interesting possibility would be to hook into NOTIFY messages about
metazone changes (e.g. using `nsnotifyd`), and in response use the
zone differences (from IXFR or from `nsdiff`) to generate the
corresponding `rndc ???zone` commands.

Question: How can we know the name server configuration matches the
metazone? With Vixie metazones the configuration was entirely
regenerated each time. If we are applying changes then it becomes
possible to get out of sync if an error occurs.

An ugly possibility is to examine BIND's dynamic zone configuration
file. This has the advantage that we deal with only the server's
dynamically added zones, the ones that should match the metazone. The
disadvantage is it might run into concurrent update problems.

To avoid concurrency problems we could iterate `rndc showzone`, though
this might be slow. We would also have to use BIND's statistics server
to get a list of zones, to find out which zones are configured in the
server but not in the metazone. (`rndc showzone` fails if you ask
about a zone which was not dynamically added.)


If we are using IXFR on metazones to apply changes, then we need
somewhere to store the current metazone serial number which is
supposed to match named's configuration, so we can request the
relevant set of changes. We also need some kind of list of view names
and their corresponding metazone names, for servers with multiple
views. Should we store this in a metametazone? or some ancillary file?
